// Auto-hide header functionality
document.addEventListener('DOMContentLoaded', function() {
    let lastScrollY = window.scrollY;
    const header = document.querySelector('header');
    const headerHeight = header.offsetHeight;

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤—ñ–¥—Å—Ç—É–ø –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
    const mainContent = document.querySelector('main');
    if (mainContent) {
        mainContent.style.paddingTop = headerHeight + 'px';
    }

    window.addEventListener('scroll', () => {
        const currentScrollY = window.scrollY;
        
        if (currentScrollY > lastScrollY && currentScrollY > headerHeight) {
            // –°–∫—Ä–æ–ª–∏–º–æ –≤–Ω–∏–∑ - —Ö–æ–≤–∞—î–º–æ —Ö–µ–¥–µ—Ä
            header.classList.add('hidden');
        } else {
            // –°–∫—Ä–æ–ª–∏–º–æ –≤–≥–æ—Ä—É - –ø–æ–∫–∞–∑—É—î–º–æ —Ö–µ–¥–µ—Ä
            header.classList.remove('hidden');
        }
        
        lastScrollY = currentScrollY;
    });

    // –î–æ–¥–∞—Ç–∫–æ–≤–æ: –ø–æ–∫–∞–∑—É—î–º–æ —Ö–µ–¥–µ—Ä –ø—Ä–∏ —Ö–æ–≤–µ—Ä—ñ
    header.addEventListener('mouseenter', () => {
        header.classList.remove('hidden');
    });

    // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –º–∏—Ç—Ç—î–≤–æ–º—É —Ö–æ–≤–∞–Ω–Ω—é –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∫—É—Ä—Å–æ—Ä–∞
    header.addEventListener('mouseleave', () => {
        lastScrollY = window.scrollY;
    });

    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ñ—ñ–ª—é
    updateProfileStats();

    // –ü–ª–∞–≤–Ω–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É –ø—Ä–æ—Ñ—ñ–ª—é
    setTimeout(() => {
        const profileContainer = document.querySelector('.profile-container');
        if (profileContainer) {
            profileContainer.style.opacity = '1';
            profileContainer.style.transform = 'translateY(0)';
        }
    }, 100);

    // –î–µ–º–æ-—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–ª—è –ø–æ–∫–∞–∑—É –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π
    document.querySelector('.profile-avatar').addEventListener('click', function() {
        showTempMessage('üé≠ –î–µ–º–æ-—Ä–µ–∂–∏–º\n\n–£ –ø–æ–≤–Ω–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ–π –≤–µ—Ä—Å—ñ—ó —Ç—É—Ç –±—É–¥–µ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–º—ñ–Ω–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é!');
    });

    // –î–µ–º–æ-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Å–µ–∫—Ü—ñ–π
    document.querySelectorAll('.profile-section').forEach(section => {
        section.addEventListener('click', function() {
            const title = this.querySelector('.section-title').textContent;
            showTempMessage(`üîÆ –î–µ–º–æ-—Ñ—É–Ω–∫—Ü—ñ—è: ${title}\n\n–¶—è —Ñ—É–Ω–∫—Ü—ñ—è –±—É–¥–µ –ø–æ–≤–Ω—ñ—Å—Ç—é –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ—Å–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤!`);
        });
    });
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—ñ—î—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ—Ñ—ñ–ª—é
function updateProfileStats() {
    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ localStorage
    const bookmarks = JSON.parse(localStorage.getItem('animeBookmarks') || '[]');
    const ratings = JSON.parse(localStorage.getItem('animeRatings') || '{}');
    
    // –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Ü—ñ–Ω–æ–∫
    const ratingsCount = Object.keys(ratings).length;
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —á–∏—Å–ª–∞ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏—Ü—ñ
    const bookmarkCountElement = document.querySelector('.stat-item:nth-child(1) .stat-number');
    const ratingCountElement = document.querySelector('.stat-item:nth-child(2) .stat-number');
    const watchedCountElement = document.querySelector('.stat-item:nth-child(3) .stat-number');
    
    if (bookmarkCountElement) {
        bookmarkCountElement.textContent = bookmarks.length;
    }
    
    if (ratingCountElement) {
        ratingCountElement.textContent = ratingsCount;
    }
    
    if (watchedCountElement) {
        // –î–ª—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏—Ö –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Ü—ñ–Ω–æ–∫ —è–∫ –ø—Ä–∏–±–ª–∏–∑–Ω–∏–π –ø–æ–∫–∞–∑–Ω–∏–∫
        watchedCountElement.textContent = ratingsCount;
    }
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –≤–º—ñ—Å—Ç —Å–µ–∫—Ü—ñ–π –∑ –¥–∞–Ω–∏–º–∏
    updateBookmarksSection(bookmarks);
    updateRatingsSection(ratings);
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó –∑–∞–∫–ª–∞–¥–æ–∫
function updateBookmarksSection(bookmarks) {
    const bookmarksContainer = document.querySelector('.profile-section:nth-child(1)');
    const emptyState = bookmarksContainer.querySelector('.empty-state');
    
    if (!bookmarksContainer) return;
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫—É
    let bookmarksList = bookmarksContainer.querySelector('.profile-list');
    if (!bookmarksList) {
        bookmarksList = document.createElement('div');
        bookmarksList.classList.add('profile-list');
        bookmarksContainer.appendChild(bookmarksList);
    }
    
    // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    bookmarksList.innerHTML = '';
    
    if (bookmarks.length === 0) {
        // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞–Ω "–ø—É—Å—Ç–æ"
        if (emptyState) {
            emptyState.style.display = 'block';
        }
        return;
    }
    
    // –•–æ–≤–∞—î–º–æ —Å—Ç–∞–Ω "–ø—É—Å—Ç–æ"
    if (emptyState) {
        emptyState.style.display = 'none';
    }
    
    // –î–æ–¥–∞—î–º–æ –∑–∞–∫–ª–∞–¥–∫–∏
    bookmarks.forEach(bookmark => {
        const bookmarkCard = document.createElement('a');
        bookmarkCard.classList.add('bookmark-card');
        bookmarkCard.href = `anime.html?id=${bookmark.id}`;
        
        // –¢—É—Ç –º–∏ –± –æ—Ç—Ä–∏–º—É–≤–∞–ª–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–Ω—ñ–º–µ –∑ JSON —Ñ–∞–π–ª—ñ–≤
        // –î–ª—è –¥–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–≥–ª—É—à–∫–∏
        bookmarkCard.innerHTML = `
            <img src="${bookmark.img}" alt="${bookmark.title}" class="bookmark-card-image">
            <div class="bookmark-card-info">
                <div class="bookmark-card-title">${bookmark.title}</div>
                <div class="bookmark-card-meta">
                    <span>24 —Å–µ—Ä—ñ—ó</span>
                    <span class="bookmark-card-status">–û–Ω“ë–æ—ó–Ω–≥</span>
                    <span>‚òÖ 8.9</span>
                </div>
                <div class="bookmark-card-actions">
                    <a href="anime.html?id=${bookmark.id}" class="details-btn">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</a>
                    <button class="remove-btn" onclick="event.preventDefault(); removeBookmark('${bookmark.id}')">–í–∏–¥–∞–ª–∏—Ç–∏</button>
                </div>
            </div>
        `;
        
        bookmarksList.appendChild(bookmarkCard);
    });
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó –æ—Ü—ñ–Ω–æ–∫
function updateRatingsSection(ratings) {
    const ratingsContainer = document.querySelector('.profile-section:nth-child(2)');
    const emptyState = ratingsContainer.querySelector('.empty-state');
    
    if (!ratingsContainer) return;
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫—É
    let ratingsList = ratingsContainer.querySelector('.profile-list');
    if (!ratingsList) {
        ratingsList = document.createElement('div');
        ratingsList.classList.add('profile-list');
        ratingsContainer.appendChild(ratingsList);
    }
    
    // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    ratingsList.innerHTML = '';
    
    if (Object.keys(ratings).length === 0) {
        // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞–Ω "–ø—É—Å—Ç–æ"
        if (emptyState) {
            emptyState.style.display = 'block';
        }
        return;
    }
    
    // –•–æ–≤–∞—î–º–æ —Å—Ç–∞–Ω "–ø—É—Å—Ç–æ"
    if (emptyState) {
        emptyState.style.display = 'none';
    }
    
    // –î–æ–¥–∞—î–º–æ –æ—Ü—ñ–Ω–∫–∏
    Object.entries(ratings).forEach(([animeId, ratingData]) => {
        const ratingCard = document.createElement('div');
        ratingCard.classList.add('rating-card');
        
        // –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É
        const ratingDate = new Date(ratingData.date).toLocaleDateString('uk-UA');
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä—è–¥–æ–∫ –∑—ñ—Ä–æ—á–æ–∫
        const stars = '‚òÖ'.repeat(ratingData.rating) + '‚òÜ'.repeat(10 - ratingData.rating);
        
        ratingCard.innerHTML = `
            <div class="rating-card-image" style="background: rgba(255, 105, 180, 0.2); display: flex; align-items: center; justify-content: center;">
                <span style="color: #ff69b4; font-size: 1.5em;">‚≠ê</span>
            </div>
            <div class="rating-card-info">
                <div class="rating-card-title">–ê–Ω—ñ–º–µ ID: ${animeId}</div>
                <div class="rating-card-stars">${stars}</div>
                <div class="rating-card-date">–û—Ü—ñ–Ω–µ–Ω–æ: ${ratingDate}</div>
            </div>
            <div class="rating-card-actions">
                <button class="delete-rating-btn" onclick="deleteRating('${animeId}')">√ó</button>
            </div>
        `;
        
        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –∞–Ω—ñ–º–µ
        ratingCard.addEventListener('click', (e) => {
            if (!e.target.closest('.delete-rating-btn')) {
                window.location.href = `anime.html?id=${animeId}`;
            }
        });
        
        ratingsList.appendChild(ratingCard);
    });
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–∫–ª–∞–¥–∫–∏
function removeBookmark(animeId) {
    if (confirm('–í–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –∑–∞–∫–ª–∞–¥–∫—É?')) {
        let bookmarks = JSON.parse(localStorage.getItem('animeBookmarks') || '[]');
        bookmarks = bookmarks.filter(item => item.id !== animeId);
        localStorage.setItem('animeBookmarks', JSON.stringify(bookmarks));
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateProfileStats();
        showTempMessage('–ó–∞–∫–ª–∞–¥–∫—É –≤–∏–¥–∞–ª–µ–Ω–æ üìï');
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –æ—Ü—ñ–Ω–∫–∏
function deleteRating(animeId) {
    if (confirm('–í–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –æ—Ü—ñ–Ω–∫—É?')) {
        let ratings = JSON.parse(localStorage.getItem('animeRatings') || '{}');
        delete ratings[animeId];
        localStorage.setItem('animeRatings', JSON.stringify(ratings));
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateProfileStats();
        showTempMessage('–û—Ü—ñ–Ω–∫—É –≤–∏–¥–∞–ª–µ–Ω–æ ‚≠ê');
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
function showTempMessage(message) {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    const messageEl = document.createElement('div');
    messageEl.textContent = message;
    messageEl.classList.add('temp-message');
    
    document.body.appendChild(messageEl);
    
    // –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏ - –ø–ª–∞–≤–Ω–æ –∑'—è–≤–ª—è—î—Ç—å—Å—è –∑–∞ 0.5 —Å–µ–∫—É–Ω–¥–∏
    setTimeout(() => {
        messageEl.classList.add('show');
    }, 10);
    
    // –ê–Ω—ñ–º–∞—Ü—ñ—è –∑–Ω–∏–∫–Ω–µ–Ω–Ω—è - –ø–ª–∞–≤–Ω–æ –∑–Ω–∏–∫–∞—î —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
    setTimeout(() => {
        messageEl.classList.remove('show');
        
        // –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
        setTimeout(() => {
            if (document.body.contains(messageEl)) {
                document.body.removeChild(messageEl);
            }
        }, 500);
    }, 2000);
}